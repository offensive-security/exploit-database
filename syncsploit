#!/bin/bash
#       Name: SyncSploit - Exploit-DB & MetaSploit synchronisation tool
#    Version: 1.0.0 (Release date: 2016-10-01)
# Written by: x42en
#   Homepage: https://github.com/offensive-security/exploit-database
#
## NOTE:
#   Exit code '0' means finished normally
#   Exit code '1' means something went wrong
#   Exit code '2' means finished help screen


## OS settings (get the path of where the script is stored + database file)
gitpath="$( cd "$( dirname "$(realpath ${BASH_SOURCE[0]})" )" && pwd)"
csvpath="${gitpath}/files.csv"
progname="$( basename "$0" )"

## Set LANG variable to avoid illegal byte sequence errors
LANG=C

## Set number of file sync
FSYNC=0
## Set verbosity level
VERBOSE=0

## Usage info
function usage()
{
  echo " Usage: ${progname} [options]"
  echo
  echo "=========="
  echo " Examples "
  echo "=========="
  echo "  ${progname} -v"
  echo "  ${progname} -h"
  echo
  echo "========="
  echo " Options "
  echo "========="
  echo "   -v, --verbose     [Term]    Show copied & excluded files (New directories are always shown)."
  echo "   -h, --help        [Term]    Show this help."
  echo
  exit 2
}

# Function used to copy exploit found
function copy()
{
  # Initialize vars
  SRC="$gitpath/$1"
  DST="${HOME}/.msf4/modules/${1/platforms\/}"
  DPATH="$( dirname $DST )"
  
  # Check if file exists
  if [[ ! -f "${DST}" ]]; then
    # If directory does not exists, create it
    if [[ ! -d "${DPATH}" ]]; then
      printf "[+] Creating %s directory...\n" $DPATH
      mkdir -p $DPATH 2>/dev/null
    fi

    # Copy the file
    if [[ $VERBOSE == 1 ]]; then
      printf '[+] Copying %s -> %s\n' $SRC $DST
    fi
    cp -f $SRC $DST 2>/dev/null
    
    # Increase file sync
    ((FSYNC++))
  fi
}

## If we cannot find files.csv
if [[ ! -f "${csvpath}" ]]; then
  echo '[!] Could not find: ' ${csvpath}
  exit 1
fi

## If metasploit directory is not set create it
if [[ ! -d "${HOME}/.msf4/modules" ]]; then
  echo "[!] Metasploit modules directory: ${HOME}/.msf4/modules does not exists"
  read -p "Do you want us to create it ? (y/N) " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    mkdir -p $HOME/.msf4/modules
  else
    exit 1
  fi
fi


## Parse long arguments
ARGS="-"
for param in "$@"; do
  if [[ "${param}" == "--help" ]]; then
    usage >&2;
  elif [[ "${param}" == "--verbose" ]]; then
    VERBOSE=1
  else
    if [[ "${param:0:1}" == "-" ]]; then
      ARGS=${ARGS}${param:1}
      shift
      continue
    fi
  fi
done

## Parse short arguments
while getopts "vh" arg "${ARGS}"; do
  if [[ "${arg}" = "?" ]]; then
    usage >&2;
  fi
  case ${arg} in
    v) VERBOSE=1;;
    h) usage >&2;;
  esac
  shift $(( OPTIND - 1 ))
done


## Extract Sploit's Ninja
OUTPUT="$( awk -F "\"*,\"*" '{ printf "%s|%s\n", $3, $2 }' "${csvpath}" \
  | eval "fgrep -i \"(Metasploit)\"" \
  | awk -F '|' '/1/ {print $2}' )"

## Deal with each exploit found
while read -r line; do
  # Check file is a ruby or php script
  if [[ ${line##*.} == 'rb' || ${line##*.} == 'pm' ]]; then
    copy "${line}"
  elif [[ $VERBOSE == 1 ]]; then
    printf '[!] Exclude %s\n' $line
    printf '[!] Does not appear to be a valid metasploit script !\n'
  fi
done <<< "${OUTPUT}"

## Print results
if [[ FSYNC -eq 0 ]]; then
  printf "\n[+] Everything up to date !\n"
else
  printf "\n[+] %d files copied...\n" $FSYNC
fi